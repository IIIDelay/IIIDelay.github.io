const e=JSON.parse('{"key":"v-e6553360","path":"/distributed/cache/redis.html","title":"Redis面试题","lang":"en-US","frontmatter":{"icon":"edit","category":["Cache","NoSQL"],"tag":["yellow","curly","long"],"description":"Redis面试题 redis常见面试题：吃透这份Redis学习笔记，直接把阿里面试官按在地上摩擦！ 1. 什么是redis？ Redis (Remote Dictionary Server)就是一个使用 C 语言开发的数据库，与传统数据库不同的是 Redis 的数据是存在内存中的 ，也就是它是内存数据库，所以读写速度非常快，因此 Redis 被广泛应用于缓存方向。","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/distributed/cache/redis.html"}],["meta",{"property":"og:site_name","content":"IIIDelay的 Blog"}],["meta",{"property":"og:title","content":"Redis面试题"}],["meta",{"property":"og:description","content":"Redis面试题 redis常见面试题：吃透这份Redis学习笔记，直接把阿里面试官按在地上摩擦！ 1. 什么是redis？ Redis (Remote Dictionary Server)就是一个使用 C 语言开发的数据库，与传统数据库不同的是 Redis 的数据是存在内存中的 ，也就是它是内存数据库，所以读写速度非常快，因此 Redis 被广泛应用于缓存方向。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://mister-hope.github.io/"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"Redis面试题"}],["meta",{"property":"article:author","content":"Mr.IIIDelay"}],["meta",{"property":"article:tag","content":"yellow"}],["meta",{"property":"article:tag","content":"curly"}],["meta",{"property":"article:tag","content":"long"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Redis面试题\\",\\"image\\":[\\"https://mister-hope.github.io/\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.IIIDelay\\",\\"url\\":\\"https://mrhope.site\\"}]}"]]},"headers":[{"level":2,"title":"1. 什么是redis？","slug":"_1-什么是redis","link":"#_1-什么是redis","children":[]},{"level":2,"title":"2. 分布式缓存常见的技术选型","slug":"_2-分布式缓存常见的技术选型","link":"#_2-分布式缓存常见的技术选型","children":[{"level":3,"title":"2.1 缓存类型","slug":"_2-1-缓存类型","link":"#_2-1-缓存类型","children":[]},{"level":3,"title":"2.1 Redis 和 Memcached 的区别和共同点","slug":"_2-1-redis-和-memcached-的区别和共同点","link":"#_2-1-redis-和-memcached-的区别和共同点","children":[]}]},{"level":2,"title":"3. Redis有哪些优缺点？","slug":"_3-redis有哪些优缺点","link":"#_3-redis有哪些优缺点","children":[]},{"level":2,"title":"4. 为什么要用 Redis /为什么要用缓存？","slug":"_4-为什么要用-redis-为什么要用缓存","link":"#_4-为什么要用-redis-为什么要用缓存","children":[]},{"level":2,"title":"5. 如何保障mysql和redis之间的数据一致性？","slug":"_5-如何保障mysql和redis之间的数据一致性","link":"#_5-如何保障mysql和redis之间的数据一致性","children":[{"level":3,"title":"方案一：延时双删","slug":"方案一-延时双删","link":"#方案一-延时双删","children":[]},{"level":3,"title":"方案二：异步更新缓存(基于订阅binlog的同步机制)","slug":"方案二-异步更新缓存-基于订阅binlog的同步机制","link":"#方案二-异步更新缓存-基于订阅binlog的同步机制","children":[]}]},{"level":2,"title":"6.Redis有哪些数据类型及使用场景","slug":"_6-redis有哪些数据类型及使用场景","link":"#_6-redis有哪些数据类型及使用场景","children":[{"level":3,"title":"String","slug":"string","link":"#string","children":[]},{"level":3,"title":"List","slug":"list","link":"#list","children":[]},{"level":3,"title":"Hash","slug":"hash","link":"#hash","children":[]},{"level":3,"title":"Set","slug":"set","link":"#set","children":[]},{"level":3,"title":"Sorted Set","slug":"sorted-set","link":"#sorted-set","children":[]},{"level":3,"title":"bitmap","slug":"bitmap","link":"#bitmap","children":[]}]},{"level":2,"title":"7. Redis持久化机制","slug":"_7-redis持久化机制","link":"#_7-redis持久化机制","children":[{"level":3,"title":"7.1 为什么要持久化？","slug":"_7-1-为什么要持久化","link":"#_7-1-为什么要持久化","children":[]},{"level":3,"title":"7.2 快照持久化(snapshotting，RDB)","slug":"_7-2-快照持久化-snapshotting-rdb","link":"#_7-2-快照持久化-snapshotting-rdb","children":[]},{"level":3,"title":"7.3 只追加文件持久化(append-only file, AOF)","slug":"_7-3-只追加文件持久化-append-only-file-aof","link":"#_7-3-只追加文件持久化-append-only-file-aof","children":[]},{"level":3,"title":"7.4 RDB持久化、AOF持久化的区别","slug":"_7-4-rdb持久化、aof持久化的区别","link":"#_7-4-rdb持久化、aof持久化的区别","children":[]},{"level":3,"title":"7.5 Redis持久化数据和缓存怎么做扩容？","slug":"_7-5-redis持久化数据和缓存怎么做扩容","link":"#_7-5-redis持久化数据和缓存怎么做扩容","children":[]},{"level":3,"title":"7.6 RDB和AOF如何选择？","slug":"_7-6-rdb和aof如何选择","link":"#_7-6-rdb和aof如何选择","children":[]}]},{"level":2,"title":"8. Redis过期键的删除策略","slug":"_8-redis过期键的删除策略","link":"#_8-redis过期键的删除策略","children":[]},{"level":2,"title":"9. Redis 内存淘汰机制了解么？","slug":"_9-redis-内存淘汰机制了解么","link":"#_9-redis-内存淘汰机制了解么","children":[]},{"level":2,"title":"10. Redis key的过期时间和永久有效分别怎么设置？","slug":"_10-redis-key的过期时间和永久有效分别怎么设置","link":"#_10-redis-key的过期时间和永久有效分别怎么设置","children":[]},{"level":2,"title":"11. 如何进行Redis内存优化？","slug":"_11-如何进行redis内存优化","link":"#_11-如何进行redis内存优化","children":[{"level":3,"title":"(1)key与value的优化","slug":"_1-key与value的优化","link":"#_1-key与value的优化","children":[]},{"level":3,"title":"(2)字符串拼接的优化","slug":"_2-字符串拼接的优化","link":"#_2-字符串拼接的优化","children":[]},{"level":3,"title":"(3)编码优化","slug":"_3-编码优化","link":"#_3-编码优化","children":[]},{"level":3,"title":"(4)使用 lazy free 特性","slug":"_4-使用-lazy-free-特性","link":"#_4-使用-lazy-free-特性","children":[]},{"level":3,"title":"(5)设置合理的键值过期时间","slug":"_5-设置合理的键值过期时间","link":"#_5-设置合理的键值过期时间","children":[]},{"level":3,"title":"(6)禁用长耗时的查询命令","slug":"_6-禁用长耗时的查询命令","link":"#_6-禁用长耗时的查询命令","children":[]},{"level":3,"title":"(7)使用 slowlog 优化耗时命令","slug":"_7-使用-slowlog-优化耗时命令","link":"#_7-使用-slowlog-优化耗时命令","children":[]},{"level":3,"title":"(8)使用 Pipeline 批量操作数据","slug":"_8-使用-pipeline-批量操作数据","link":"#_8-使用-pipeline-批量操作数据","children":[]},{"level":3,"title":"(9)避免大量数据同时失效","slug":"_9-避免大量数据同时失效","link":"#_9-避免大量数据同时失效","children":[]},{"level":3,"title":"(10)Redis 连接池","slug":"_10-redis-连接池","link":"#_10-redis-连接池","children":[]},{"level":3,"title":"(11)限制 Redis 内存大小，使用合理的内存淘汰策略","slug":"_11-限制-redis-内存大小-使用合理的内存淘汰策略","link":"#_11-限制-redis-内存大小-使用合理的内存淘汰策略","children":[]},{"level":3,"title":"(12)使用物理机而非虚拟机","slug":"_12-使用物理机而非虚拟机","link":"#_12-使用物理机而非虚拟机","children":[]},{"level":3,"title":"(13)使用合理的持久化策略","slug":"_13-使用合理的持久化策略","link":"#_13-使用合理的持久化策略","children":[]},{"level":3,"title":"(14)使用分布式架构来增加读写速度","slug":"_14-使用分布式架构来增加读写速度","link":"#_14-使用分布式架构来增加读写速度","children":[]}]},{"level":2,"title":"12. Redis线程模型","slug":"_12-redis线程模型","link":"#_12-redis线程模型","children":[{"level":3,"title":"12.1 线程模型","slug":"_12-1-线程模型","link":"#_12-1-线程模型","children":[]},{"level":3,"title":"12.2 Redis为什么这么快？","slug":"_12-2-redis为什么这么快","link":"#_12-2-redis为什么这么快","children":[]},{"level":3,"title":"12.3 Redis的非阻塞IO多路复用模型","slug":"_12-3-redis的非阻塞io多路复用模型","link":"#_12-3-redis的非阻塞io多路复用模型","children":[]},{"level":3,"title":"12.4 Redis6.0 之前 为什么不使用多线程？","slug":"_12-4-redis6-0-之前-为什么不使用多线程","link":"#_12-4-redis6-0-之前-为什么不使用多线程","children":[]},{"level":3,"title":"12.5 Redis6.0 之后为何引入了多线程？","slug":"_12-5-redis6-0-之后为何引入了多线程","link":"#_12-5-redis6-0-之后为何引入了多线程","children":[]}]},{"level":2,"title":"13. Redis事务","slug":"_13-redis事务","link":"#_13-redis事务","children":[{"level":3,"title":"13.1 实现原理","slug":"_13-1-实现原理","link":"#_13-1-实现原理","children":[]},{"level":3,"title":"13.2 事务的四大特性","slug":"_13-2-事务的四大特性","link":"#_13-2-事务的四大特性","children":[]},{"level":3,"title":"14.3 Redis 是不支持 roll back 的原因","slug":"_14-3-redis-是不支持-roll-back-的原因","link":"#_14-3-redis-是不支持-roll-back-的原因","children":[]},{"level":3,"title":"14.4 事务失败处理(是否保证原子性)","slug":"_14-4-事务失败处理-是否保证原子性","link":"#_14-4-事务失败处理-是否保证原子性","children":[]}]},{"level":2,"title":"15. Redis缓存异常","slug":"_15-redis缓存异常","link":"#_15-redis缓存异常","children":[{"level":3,"title":"15.1 缓存热点key","slug":"_15-1-缓存热点key","link":"#_15-1-缓存热点key","children":[]},{"level":3,"title":"15.2 缓存雪崩","slug":"_15-2-缓存雪崩","link":"#_15-2-缓存雪崩","children":[]},{"level":3,"title":"15.3 缓存穿透","slug":"_15-3-缓存穿透","link":"#_15-3-缓存穿透","children":[]},{"level":3,"title":"15.4 缓存击穿","slug":"_15-4-缓存击穿","link":"#_15-4-缓存击穿","children":[]},{"level":3,"title":"15.5 缓存预热","slug":"_15-5-缓存预热","link":"#_15-5-缓存预热","children":[]},{"level":3,"title":"15.6 缓存降级","slug":"_15-6-缓存降级","link":"#_15-6-缓存降级","children":[]}]},{"level":2,"title":"16 分布式问题","slug":"_16-分布式问题","link":"#_16-分布式问题","children":[{"level":3,"title":"16.1 Redis实现分布式锁？","slug":"_16-1-redis实现分布式锁","link":"#_16-1-redis实现分布式锁","children":[]},{"level":3,"title":"16.2 如何解决 Redis 的并发竞争 Key 问题？","slug":"_16-2-如何解决-redis-的并发竞争-key-问题","link":"#_16-2-如何解决-redis-的并发竞争-key-问题","children":[]},{"level":3,"title":"16.3 分布式Redis是前期做还是后期规模上来了再做好？为什么？","slug":"_16-3-分布式redis是前期做还是后期规模上来了再做好-为什么","link":"#_16-3-分布式redis是前期做还是后期规模上来了再做好-为什么","children":[]},{"level":3,"title":"16.4 什么是 RedLock？","slug":"_16-4-什么是-redlock","link":"#_16-4-什么是-redlock","children":[]}]},{"level":2,"title":"17 集群方案","slug":"_17-集群方案","link":"#_17-集群方案","children":[{"level":3,"title":"17.1 Redis主从复制","slug":"_17-1-redis主从复制","link":"#_17-1-redis主从复制","children":[]},{"level":3,"title":"17.2 哨兵(sentinal)机制","slug":"_17-2-哨兵-sentinal-机制","link":"#_17-2-哨兵-sentinal-机制","children":[]},{"level":3,"title":"17.3 Redis cluster 模式","slug":"_17-3-redis-cluster-模式","link":"#_17-3-redis-cluster-模式","children":[]}]},{"level":2,"title":"参考：","slug":"参考","link":"#参考","children":[]},{"level":2,"title":"String","slug":"string-1","link":"#string-1","children":[{"level":3,"title":"基本介绍","slug":"基本介绍","link":"#基本介绍","children":[]},{"level":3,"title":"数据结构","slug":"数据结构","link":"#数据结构","children":[]},{"level":3,"title":"编码方式","slug":"编码方式","link":"#编码方式","children":[]}]},{"level":2,"title":"List","slug":"list-1","link":"#list-1","children":[{"level":3,"title":"基本介绍","slug":"基本介绍-1","link":"#基本介绍-1","children":[]},{"level":3,"title":"数据结构","slug":"数据结构-1","link":"#数据结构-1","children":[]}]},{"level":2,"title":"Hash","slug":"hash-1","link":"#hash-1","children":[{"level":3,"title":"基本介绍","slug":"基本介绍-2","link":"#基本介绍-2","children":[]},{"level":3,"title":"数据结构","slug":"数据结构-2","link":"#数据结构-2","children":[]},{"level":3,"title":"Dict","slug":"dict","link":"#dict","children":[]}]},{"level":2,"title":"Set","slug":"set-1","link":"#set-1","children":[{"level":3,"title":"基本介绍","slug":"基本介绍-3","link":"#基本介绍-3","children":[]},{"level":3,"title":"数据结构","slug":"数据结构-3","link":"#数据结构-3","children":[]}]},{"level":2,"title":"ZSet","slug":"zset","link":"#zset","children":[{"level":3,"title":"基本介绍","slug":"基本介绍-4","link":"#基本介绍-4","children":[]},{"level":3,"title":"数据结构","slug":"数据结构-4","link":"#数据结构-4","children":[]},{"level":3,"title":"跳跃表","slug":"跳跃表","link":"#跳跃表","children":[]}]},{"level":2,"title":"Bitmaps","slug":"bitmaps","link":"#bitmaps","children":[{"level":3,"title":"基本介绍","slug":"基本介绍-5","link":"#基本介绍-5","children":[]},{"level":3,"title":"相关命令","slug":"相关命令","link":"#相关命令","children":[]},{"level":3,"title":"Bitmaps与set对比","slug":"bitmaps与set对比","link":"#bitmaps与set对比","children":[]}]},{"level":2,"title":"HyperLogLog","slug":"hyperloglog","link":"#hyperloglog","children":[{"level":3,"title":"基本介绍","slug":"基本介绍-6","link":"#基本介绍-6","children":[]},{"level":3,"title":"相关命令","slug":"相关命令-1","link":"#相关命令-1","children":[]}]},{"level":2,"title":"Geospatial","slug":"geospatial","link":"#geospatial","children":[{"level":3,"title":"基本介绍","slug":"基本介绍-7","link":"#基本介绍-7","children":[]},{"level":3,"title":"相关命令","slug":"相关命令-2","link":"#相关命令-2","children":[]}]},{"level":2,"title":"参看：","slug":"参看","link":"#参看","children":[]}],"git":{},"readingTime":{"minutes":99.48,"words":29845},"filePathRelative":"distributed/cache/redis.md","excerpt":"<h1> Redis面试题</h1>\\n<p>redis常见面试题：<a href=\\"https://zhuanlan.zhihu.com/p/354314607\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">吃透这份Redis学习笔记，直接把阿里面试官按在地上摩擦！</a></p>\\n<h2> 1. 什么是redis？</h2>\\n<p><strong>Redis (Remote Dictionary Server)就是一个使用 C 语言开发的数据库</strong>，与传统数据库不同的是 <strong>Redis 的数据是存在内存中的</strong> ，也就是它是内存数据库，所以读写速度非常快，因此 Redis 被广泛应用于缓存方向。</p>","autoDesc":true}');export{e as data};
